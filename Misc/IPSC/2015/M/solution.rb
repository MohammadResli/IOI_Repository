
def get_ans(i)
  return "+![]" if i == 0

  powers = {
    1 => "+!![]",
    2 => "+!![]+!![]",
    4 => "+!![]+!![]]*[+!![]+!![]]",
    8 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    16 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    32 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    64 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    128 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    256 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    512 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]",
    1024 => "+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]+[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]*[+!![]+!![]]"
  }

  ans = []
  i.to_s(2).reverse.split('').each_with_index do |bit, i|
    if bit == '1'
      ans << powers[1 << i]
    end
  end
  ans.join('')
end

def factor(num)
  factors = []
  while num > 1 do
    (2..num).each do |i|
      if num % i == 0
        factors << i
        num /= i
        break
      end
    end
  end
  return factors
end

(3..10).each do |i|
  ans = get_ans(i)
  next_power = 1 << (i.to_s(2).size)
  str_sub = "[#{get_ans(next_power)}]-[#{get_ans(next_power - i)}]"
  ans = str_sub.size < ans.size ? str_sub : ans

  (0..(i/2)).each do |diff|
    num = i - diff
    facs = factor(num)
    temp_arr = []
    facs.each do |fac|
      temp_arr << "#{get_ans(fac)}"
    end
    curr_ans = temp_arr.join('*')
    curr_ans += get_ans(diff) if diff > 0

    ans = curr_ans.size < ans.size ? curr_ans : ans
  end

  puts ans
end
