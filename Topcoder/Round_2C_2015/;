#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <unordered_set>
#include <map>
#include <unordered_map>
#include <cstring>
#include <string>
#include <functional>
#include <numeric>
#include <iostream>
#include <sstream>
#include <ctime>

using namespace std;

template<class T> T sqr(T x) { return x * x; }
typedef long long i64;
#define all(a) a.begin(),a.end()

int dp[128];

class YetAnotherCardGame {
public:
  int maxCards(vector <int> _a, vector <int> _b) {
    vector<vector<int> > a;
    sort(all(_a));
    sort(all(_b));
    a.push_back(_a);
    a.push_back(_b);
    int n = _a.size();
    int m = _b.size();
    dp[0] = 1;
    for (int i = 0; i < n + m; ++i) {
      int t = (i & 1);
      vector<int> &c = a[t];
      if (i / 2 == c.size()) {
        break;
      }
      for (int j = 99; j >= 0; --j) {
        if (!dp[j]) {
          continue;
        }
        int k = upper_bound(all(c), j) - c.begin();
        if (k != c.size()) {
          int cur = c[k];
          dp[cur] = max(dp[cur], dp[j] + 1);
        }
      }
    }
    return *max_element(dp, dp + 101) - 1;
  }
};

int main(){
  YetAnotherCardGame test;
  cout << test.maxCards({1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}) << endl;
}
